<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TCPPort" xml:space="preserve">
    <value>TCP Port</value>
  </data>
  <data name="CreateListenServer" xml:space="preserve">
    <value>Create Listen Server</value>
  </data>
  <data name="UDPPort" xml:space="preserve">
    <value>UDP Port</value>
  </data>
  <data name="ServerName" xml:space="preserve">
    <value>Server Name</value>
  </data>
  <data name="MaxPlayers" xml:space="preserve">
    <value>Max Players</value>
  </data>
  <data name="IPAddress" xml:space="preserve">
    <value>IP Address</value>
  </data>
  <data name="SinglePlayer" xml:space="preserve">
    <value>Single Player</value>
  </data>
  <data name="MultiPlayer" xml:space="preserve">
    <value>Multi Player</value>
  </data>
  <data name="HostLocalListenServer" xml:space="preserve">
    <value>Host Local Listen Server</value>
  </data>
  <data name="ConnectToServer" xml:space="preserve">
    <value>Connect To Server</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="JoinGame" xml:space="preserve">
    <value>Join Game</value>
  </data>
  <data name="JoinServer" xml:space="preserve">
    <value>Join Server</value>
  </data>
  <data name="CreateNewPlayerShip" xml:space="preserve">
    <value>Create New Player Ship</value>
  </data>
  <data name="SelectShipAndPlayGame" xml:space="preserve">
    <value>Select Ship And Play Game</value>
  </data>
  <data name="NewPlayerShip" xml:space="preserve">
    <value>New Player Ship</value>
  </data>
  <data name="ShipName" xml:space="preserve">
    <value>Ship Name</value>
  </data>
  <data name="ExitToMainMenu" xml:space="preserve">
    <value>Exit To Main Menu</value>
  </data>
  <data name="ReturnToGame" xml:space="preserve">
    <value>Return To Game</value>
  </data>
  <data name="FlyToPlanet" xml:space="preserve">
    <value>Fly To Planet</value>
  </data>
  <data name="BackToBase" xml:space="preserve">
    <value>Go Back To Base</value>
  </data>
  <data name="CreateColosseum" xml:space="preserve">
    <value>Create Colosseum</value>
  </data>
  <data name="Credits" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="DestroyShip" xml:space="preserve">
    <value>Your ship was destroyed. It has been rebuilt</value>
  </data>
  <data name="For" xml:space="preserve">
    <value>for</value>
  </data>
  <data name="PressToContinue" xml:space="preserve">
    <value>Press Enter to continue</value>
  </data>
  <data name="VisitShop" xml:space="preserve">
    <value>Visit The Shop</value>
  </data>
  <data name="VisitHangar" xml:space="preserve">
    <value>Visit The Hangar</value>
  </data>
  <data name="CreateGambleMatch" xml:space="preserve">
    <value>Create Gamble Match</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="NumShips" xml:space="preserve">
    <value>Number Of Ships</value>
  </data>
  <data name="ShipCost" xml:space="preserve">
    <value>Ship Cost</value>
  </data>
  <data name="CompletedLevel" xml:space="preserve">
    <value>You have completed the level. Press enter to return to the base.</value>
  </data>
  <data name="GoToBase" xml:space="preserve">
    <value>Go To Base</value>
  </data>
  <data name="ChooseShip" xml:space="preserve">
    <value>Choose A Ship</value>
  </data>
  <data name="GoToBaseDenied" xml:space="preserve">
    <value>Choose a ship before going to your base</value>
  </data>
  <data name="ChooseSelectedShip" xml:space="preserve">
    <value>Choose Selected Ship</value>
  </data>
  <data name="ReturnMainMenu" xml:space="preserve">
    <value>Return To Main Menu</value>
  </data>
  <data name="ChooseShipDefault" xml:space="preserve">
    <value>Make this ship the default</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="BuyThisItem" xml:space="preserve">
    <value>Buy This Item</value>
  </data>
  <data name="CurrentBuyMode" xml:space="preserve">
    <value>Current Buy Mode</value>
  </data>
  <data name="CurrentViewMode" xml:space="preserve">
    <value>Current View Mode</value>
  </data>
  <data name="EquippedItem" xml:space="preserve">
    <value>Equipped Item</value>
  </data>
  <data name="StatName" xml:space="preserve">
    <value>Stat Name</value>
  </data>
  <data name="ThisItem" xml:space="preserve">
    <value>This Item</value>
  </data>
  <data name="ApplySelectedItem" xml:space="preserve">
    <value>Apply Selected Item</value>
  </data>
  <data name="NextItem" xml:space="preserve">
    <value>Next Item</value>
  </data>
  <data name="PreviousItem" xml:space="preserve">
    <value>Previous Item</value>
  </data>
  <data name="CostLabel" xml:space="preserve">
    <value>Cost:</value>
  </data>
  <data name="PlayerCreditLabel" xml:space="preserve">
    <value>Player Credits:</value>
  </data>
</root>